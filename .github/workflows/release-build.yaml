jobs:
  release:
    concurrency: release
    needs:
    - run_playwright_tests
    outputs:
      version: ${{steps.get-version.outputs.version}}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      id: get-version
      name: Check version
      run: "if [[ \"${{ github.event.action }}\" == \"published\" ]]\n  then\n   \
        \ VERSION=\"${{ github.event.release.tag_name }}\"\n  else\n    LATEST=`git\
        \ tag -l --sort=creatordate | tail -1`\n    VERSION=`echo ${LATEST} | awk\
        \ -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g'`-${{ github.sha }}\nfi\nif [[ -n\
        \ \"${{ github.event.inputs.buildOptions }}\" ]]\n  then\n    VERSION=\"${{\
        \ github.event.inputs.buildOptions }}\"\nfi\necho ::set-output name=version::${VERSION}\n"
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        password: ${{ secrets.PAT_GITHUB }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - continue-on-error: true
      env:
        CI: false
        GENERATE_SOURCEMAP: false
      name: Test and build the image
      run: ./gradlew test jib ${{ github.event.inputs.buildOptions }} --no-daemon
        --scan --image ghcr.io/opendatadiscovery/odd-platform -Pversion=${{ steps.get-version.outputs.version
        }} -PcontainerBuildArm=true -PcontainerBuildAmd=true
  run_playwright_tests:
    uses: ./.github/workflows/run-playwright-tests.yml
name: Release Build
on:
  repository_dispatch:
    types: trigger-ga___release-build.yaml
